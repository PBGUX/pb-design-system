{"version":3,"file":"pb-design-system-multiple-values.umd.js","sources":["../../../projects/pb-design-system/multiple-values/multiple-values.directive.ts","../../../projects/pb-design-system/multiple-values/multiple-values.module.ts","../../../projects/pb-design-system/multiple-values/multiple-values-validators.ts","../../../projects/pb-design-system/multiple-values/pb-design-system-multiple-values.ts"],"sourcesContent":["import { DOCUMENT } from '@angular/common';\nimport {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  HostBinding,\n  HostListener,\n  Inject,\n  Input,\n  OnInit,\n  Output\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nexport interface PbdsMultipleValuesSubmit {\n  event: Event;\n  value: string[];\n}\n@Directive({\n  selector: '[pbdsMultipleValues]',\n  exportAs: 'PbdsMultipleValues',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PbdsMultipleValuesDirective),\n      multi: true\n    }\n  ]\n})\nexport class PbdsMultipleValuesDirective implements ControlValueAccessor, OnInit {\n  @HostBinding('class.pbds-multiple-values') private multipleValuesClass = true;\n\n  @HostBinding('class.placeholder') private isPlaceholder = true;\n\n  @HostBinding('attr.contenteditable') private contentEditable = true;\n\n  @HostBinding('attr.role') private role = 'textbox';\n\n  @Input()\n  public readonly delimiters = [' ', ',', '\\r'];\n\n  @Input()\n  public readonly delimetersSwitches = 'gm';\n\n  @Input()\n  public readonly replacements = [\n    '(<div><br></div>)',\n    '(<div>)',\n    '(</div>)',\n    '\\t',\n    '&nbsp;',\n    '<br>|<br/>',\n    '^ +',\n    '^\\n' // newline should be last\n  ];\n\n  @Input()\n  public readonly replacementsSwtiches = 'gm';\n\n  @Input()\n  public readonly placeholder: string | null = null;\n\n  @Input()\n  public readonly submitOnEnter = false;\n\n  @Input()\n  public readonly maximumHeight = 150;\n\n  @Output()\n  public readonly submit: EventEmitter<PbdsMultipleValuesSubmit> = new EventEmitter();\n\n  private value: string;\n  private document: Document;\n\n  private onTouched = () => {};\n  private onChange: (value: string[]) => void = () => {};\n\n  constructor(@Inject(DOCUMENT) document: any, private el: ElementRef<HTMLDivElement>) {\n    // fix for using document in a publishable library see https://stackoverflow.com/questions/65222602/how-to-export-angular-10-guard-using-document-for-public-api\n    this.document = <Document>document;\n\n    // handle ngModel and FormCntrolName\n    this.writeValue(this.value);\n  }\n\n  ngOnInit() {\n    // handle event only placeholder (i.e. no ngModel or FormControlName)\n    if (this.value === undefined) {\n      this.setPlaceholder();\n    }\n\n    this.el.nativeElement.style.setProperty('--pbds-multiple-values-max-height', `${+this.maximumHeight}px`);\n  }\n\n  @HostListener('input') private onInput() {\n    return false;\n  }\n\n  @HostListener('focus') private onFocus() {\n    const selection = this.document.getSelection();\n    const range = this.document.createRange();\n\n    range.selectNodeContents(this.el.nativeElement);\n    selection.removeAllRanges();\n    selection.addRange(range);\n\n    if (this.value === this.placeholder) {\n      this.value = '';\n      this.el.nativeElement.innerHTML = '';\n      this.isPlaceholder = false;\n      return;\n    }\n\n    return false;\n  }\n\n  @HostListener('blur') private onBlur() {\n    this.onTouched();\n\n    const value = this.clean(this.el.nativeElement.innerHTML);\n\n    this.value = value;\n    this.el.nativeElement.innerHTML = value;\n\n    const values = this.toValueArray(value);\n    this.onChange(values);\n\n    this.setPlaceholder();\n\n    return false;\n  }\n\n  @HostListener('keydown', ['$event']) private onKeydown($event: KeyboardEvent) {\n    if (this.submitOnEnter && ($event.key === 'Enter' || $event.code === 'Enter') && !$event.shiftKey) {\n      return false;\n    }\n  }\n\n  @HostListener('keyup', ['$event']) private onKeyup($event: KeyboardEvent) {\n    const value = this.clean(this.el.nativeElement.innerHTML);\n    const values = this.toValueArray(value);\n\n    this.onChange(values);\n\n    if (this.submitOnEnter) {\n      if (($event.key === 'Enter' || $event.code === 'Enter') && !$event.shiftKey) {\n        this.value = value;\n        this.el.nativeElement.innerHTML = value;\n\n        this.submit.emit({\n          event: $event,\n          value: values\n        });\n      }\n\n      return false;\n    }\n  }\n\n  @HostListener('paste', ['$event']) private onPaste($event) {\n    let paste = $event.clipboardData.getData('text/plain');\n    paste = this.clean(paste);\n\n    const selection = this.document.defaultView.getSelection();\n\n    if (!selection.rangeCount) {\n      return;\n    }\n\n    this.value = paste; // do not set this.el.nativeElement.innerHTML here, will break\n\n    selection.deleteFromDocument();\n    selection.getRangeAt(0).insertNode(this.document.createTextNode(paste));\n    selection.collapseToEnd();\n\n    const pasteArr = this.toValueArray(paste);\n\n    this.onChange(pasteArr);\n\n    this.isPlaceholder = false;\n\n    return false;\n  }\n\n  // programmatically writing the value\n  writeValue(value: any) {\n    if (value) {\n      this.value = value.join('\\n');\n    }\n\n    this.setPlaceholder();\n  }\n\n  // method to be triggered on UI change\n  registerOnChange(onChange: (value: string[]) => void) {\n    this.onChange = onChange;\n  }\n\n  // method to be triggered on component touch\n  registerOnTouched(onTouched: () => void) {\n    this.onTouched = onTouched;\n  }\n\n  setDisabledState(disabled: boolean) {\n    this.contentEditable = disabled;\n  }\n\n  /**\n   * Get values\n   *\n   * @returns {string[]} Array of strings\n   */\n  getValues(): string[] {\n    const value = this.clean(this.el.nativeElement.innerHTML);\n    const values = this.toValueArray(value);\n\n    return values;\n  }\n\n  /**\n   * Reset the value to an empty string\n   *\n   * @returns void\n   */\n  reset(): void {\n    this.value = '';\n  }\n\n  /**\n   * Check if `value` is  an empty string, `<br>` or equal to the placeholder text. If not, then set the value to the placeholder and apply the placeholder class.\n   *\n   * @returns void\n   */\n  private setPlaceholder(): void {\n    if (this.placeholder) {\n      if (!this.value || this.value === '' || this.value === '<br>' || this.value === this.placeholder) {\n        this.value = this.placeholder;\n        this.el.nativeElement.innerHTML = this.placeholder;\n        this.isPlaceholder = true;\n\n        return;\n      }\n    }\n\n    this.isPlaceholder = false;\n  }\n\n  /**\n   * Convert innerHTML string to an array of strings\n   *\n   * @param {string} value - innerHTML of the content editable div\n   *\n   * @returns {string[]} Array of strings\n   */\n  private toValueArray(value: string): string[] {\n    const values = value.split(/\\n|\\r/).filter((v) => v !== '');\n    return values;\n  }\n\n  /**\n   * Clean characters from the innerHTML\n   *\n   * @param {string} value  - innerHTML of the content editable div\n   *\n   * @returns {string} String with the following removed: divs, commas, spaces, tabs, empty lines, non-breaking spaces\n   */\n  private clean(value: string): string {\n    console.log('INITIAL VALUE: ', value);\n\n    // delimeters\n    for (let index = 0; index < this.delimiters.length; index++) {\n      const regex = new RegExp(this.delimiters[index], this.delimetersSwitches);\n      value = value.replace(regex, '\\n');\n    }\n\n    // replace opening divs with divider before replacements\n    value = value.replace(/(<div>)/gm, '\\n');\n\n    // replacements\n    for (let index = 0; index < this.replacements.length; index++) {\n      const regex = new RegExp(this.replacements[index], this.replacementsSwtiches);\n      value = value.replace(regex, '');\n    }\n\n    console.log('CLEANED VALUE: ', value);\n    return value;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PbdsMultipleValuesDirective } from './multiple-values.directive';\n\n@NgModule({\n  declarations: [PbdsMultipleValuesDirective],\n  imports: [CommonModule],\n  exports: [PbdsMultipleValuesDirective]\n})\nexport class PbdsMultipleValuesModule {}\n","import { AbstractControl, ValidatorFn } from '@angular/forms';\n\nexport class PbdsMultipleValuesValidators {\n  static maxArrayLength(maxLength: number): ValidatorFn {\n    // use a varible to prevent compiler lambda error, see https://github.com/ng-packagr/ng-packagr/issues/696#issuecomment-387114613\n    const result = (c: AbstractControl): { [key: string]: boolean } | null => {\n      if (c.value?.length > maxLength) {\n        return { pbdsMultipleValuesMaxLength: true };\n      }\n\n      return null;\n    };\n\n    return result;\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["EventEmitter","Directive","NG_VALUE_ACCESSOR","forwardRef","Inject","DOCUMENT","ElementRef","HostBinding","Input","Output","HostListener","NgModule","CommonModule"],"mappings":"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"}