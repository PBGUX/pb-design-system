import { OnInit, OnChanges, OnDestroy, ElementRef, SimpleChanges, EventEmitter } from '@angular/core';
import { ViewportScroller } from '@angular/common';
import { PbdsDatavizHeatmap } from './dataviz.interfaces';
import { PbdsDatavizService } from './dataviz.service';
import * as i0 from "@angular/core";
export declare class PbdsDatavizHeatmapComponent implements OnInit, OnChanges, OnDestroy {
    private _dataviz;
    private _element;
    private _scroll;
    chartClass: boolean;
    heatmapClass: boolean;
    data: Array<PbdsDatavizHeatmap>;
    width: number;
    height: number;
    marginTop: number;
    marginRight: number;
    marginBottom: number;
    marginLeft: number;
    scale: 'threshold' | 'quantile' | 'quantize';
    domain: Array<number>;
    xAxisFormatType: 'number' | 'time';
    xAxisFormatString: string;
    yAxisFormatType: 'number' | 'time';
    yAxisFormatString: string;
    hideLegend: boolean;
    legendWidth: number;
    legendPosition: 'right' | 'bottom';
    legendLabelFormatType: 'number';
    legendLabelFormatString: string;
    tooltipXLabelFormatType: 'number' | 'time';
    tooltipXLabelFormatString: string;
    tooltipYLabelFormatType: 'number' | 'time';
    tooltipYLabelFormatString: string;
    tooltipValueFormatType: 'number';
    tooltipValueFormatString: string;
    theme: 'classic' | 'ocean' | 'sunset' | 'twilight';
    hovered: EventEmitter<object>;
    clicked: EventEmitter<object>;
    private chart;
    private svg;
    private margin;
    private colorRange;
    private colorDomain;
    private xAxisScale;
    private xAxisCall;
    private xAxis;
    private xAxisFormat;
    private xAxisTickSize;
    private xAxisTickSizeOuter;
    private hideXAxisDomain;
    private hideXAxisZero;
    private hideXAxisTicks;
    private hideXAxis;
    private yAxis;
    private yAxisFormat;
    private yAxisTickSize;
    private yAxisTickSizeOuter;
    private yAxisScale;
    private yAxisCall;
    private hideYAxis;
    private hideYAxisDomain;
    private hideYAxisZero;
    private hideYAxisTicks;
    private legendLabelFormat;
    private tooltip;
    private tooltipYLabelFormat;
    private tooltipXLabelFormat;
    private hideTooltip;
    private tooltipValueFormat;
    constructor(_dataviz: PbdsDatavizService, _element: ElementRef, _scroll: ViewportScroller);
    ngOnInit(): void;
    ngOnDestroy(): void;
    ngOnChanges(changes: SimpleChanges): void;
    updateChart: () => void;
    blockMouseOver: (event: any, data: any) => void;
    blockMouseOut: () => void;
    blockMouseClick: (event: any, data: any) => void;
    legendMouseOver: (event: any, data: any) => void;
    legendMouseOut: () => void;
    legendMouseClick: (event: any, data: any) => void;
    private tooltipShow;
    private tooltipHide;
    private xAxisFormatter;
    private yAxisFormatter;
    static ɵfac: i0.ɵɵFactoryDeclaration<PbdsDatavizHeatmapComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<PbdsDatavizHeatmapComponent, "pbds-dataviz-heatmap", never, { "data": "data"; "width": "width"; "height": "height"; "marginTop": "marginTop"; "marginRight": "marginRight"; "marginBottom": "marginBottom"; "marginLeft": "marginLeft"; "scale": "scale"; "domain": "domain"; "xAxisFormatType": "xAxisFormatType"; "xAxisFormatString": "xAxisFormatString"; "yAxisFormatType": "yAxisFormatType"; "yAxisFormatString": "yAxisFormatString"; "hideLegend": "hideLegend"; "legendWidth": "legendWidth"; "legendPosition": "legendPosition"; "legendLabelFormatType": "legendLabelFormatType"; "legendLabelFormatString": "legendLabelFormatString"; "tooltipXLabelFormatType": "tooltipXLabelFormatType"; "tooltipXLabelFormatString": "tooltipXLabelFormatString"; "tooltipYLabelFormatType": "tooltipYLabelFormatType"; "tooltipYLabelFormatString": "tooltipYLabelFormatString"; "tooltipValueFormatType": "tooltipValueFormatType"; "tooltipValueFormatString": "tooltipValueFormatString"; "theme": "theme"; }, { "hovered": "hovered"; "clicked": "clicked"; }, never, never, false>;
}
