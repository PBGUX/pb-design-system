import { OnInit, OnChanges, EventEmitter, ElementRef, OnDestroy, SimpleChanges } from '@angular/core';
import { ViewportScroller } from '@angular/common';
import { PbdsDatavizService } from './dataviz.service';
import { PbdsDatavizMapData } from './dataviz.interfaces';
import * as i0 from "@angular/core";
export declare class PbdsDatavizBubbleMapComponent implements OnInit, OnChanges, OnDestroy {
    private _element;
    private _scroll;
    private _dataviz;
    chartClass: boolean;
    bubbleMapClass: boolean;
    data: Array<PbdsDatavizMapData>;
    topojson: any;
    feature: string;
    projectionType: any;
    scale: any;
    center: any;
    width: number;
    height: number;
    type: 'medium' | 'high' | 'debug';
    dot: boolean;
    marginTop: number;
    marginRight: number;
    marginBottom: number;
    marginLeft: number;
    color: string;
    textColor: string;
    textSizeRange: number[];
    dotSize: number;
    bubbleSizeRange: number[];
    bubbleLabelFormatType: 'number';
    bubbleLabelFormatString: string;
    hideTooltip: boolean;
    hideTooltipValue: boolean;
    tooltipHeaderSuffix: string;
    tooltipValueFormatType: 'number';
    tooltipValueFormatString: string;
    hovered: EventEmitter<object>;
    clicked: EventEmitter<object>;
    private projection;
    private geoPath;
    private topojsonFeature;
    private chart;
    private svg;
    private margin;
    private bubbleContainer;
    private bubbleRadius;
    private fontRange;
    private bubbleLabelFormat;
    private tooltip;
    private tooltipValueFormat;
    constructor(_element: ElementRef, _scroll: ViewportScroller, _dataviz: PbdsDatavizService);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    updateChart: () => void;
    bubbleMouseOver: (event: any, data: any) => void;
    bubbleMouseOut: (event: any, data: any) => void;
    bubbleMouseClick: (event: any, data: any) => void;
    private tooltipShow;
    private tooltipHide;
    static ɵfac: i0.ɵɵFactoryDeclaration<PbdsDatavizBubbleMapComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<PbdsDatavizBubbleMapComponent, "pbds-dataviz-bubble-map", never, { "data": { "alias": "data"; "required": false; }; "topojson": { "alias": "topojson"; "required": false; }; "feature": { "alias": "feature"; "required": false; }; "projectionType": { "alias": "projectionType"; "required": false; }; "scale": { "alias": "scale"; "required": false; }; "center": { "alias": "center"; "required": false; }; "width": { "alias": "width"; "required": false; }; "height": { "alias": "height"; "required": false; }; "type": { "alias": "type"; "required": false; }; "dot": { "alias": "dot"; "required": false; }; "marginTop": { "alias": "marginTop"; "required": false; }; "marginRight": { "alias": "marginRight"; "required": false; }; "marginBottom": { "alias": "marginBottom"; "required": false; }; "marginLeft": { "alias": "marginLeft"; "required": false; }; "color": { "alias": "color"; "required": false; }; "textColor": { "alias": "textColor"; "required": false; }; "textSizeRange": { "alias": "textSizeRange"; "required": false; }; "dotSize": { "alias": "dotSize"; "required": false; }; "bubbleSizeRange": { "alias": "bubbleSizeRange"; "required": false; }; "bubbleLabelFormatType": { "alias": "bubbleLabelFormatType"; "required": false; }; "bubbleLabelFormatString": { "alias": "bubbleLabelFormatString"; "required": false; }; "hideTooltip": { "alias": "hideTooltip"; "required": false; }; "hideTooltipValue": { "alias": "hideTooltipValue"; "required": false; }; "tooltipHeaderSuffix": { "alias": "tooltipHeaderSuffix"; "required": false; }; "tooltipValueFormatType": { "alias": "tooltipValueFormatType"; "required": false; }; "tooltipValueFormatString": { "alias": "tooltipValueFormatString"; "required": false; }; }, { "hovered": "hovered"; "clicked": "clicked"; }, never, never, false, never>;
}
