{"version":3,"file":"pb-design-system-daterange-popover.mjs","sources":["../../../projects/pb-design-system/daterange-popover/daterange-popover.service.ts","../../../projects/pb-design-system/daterange-popover/daterange-popover.component.ts","../../../projects/pb-design-system/daterange-popover/daterange-popover.component.html","../../../projects/pb-design-system/daterange-popover/daterange-popover.module.ts","../../../projects/pb-design-system/daterange-popover/pb-design-system-daterange-popover.ts"],"sourcesContent":["import { Injectable, Inject, LOCALE_ID } from '@angular/core';\nimport { registerLocaleData } from '@angular/common';\n\nimport { PbdsDaterangeLocale } from './daterange-popover.interfaces';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PbdsDaterangeService {\n  private locale = this.localeId.toLowerCase();\n\n  constructor(@Inject(LOCALE_ID) private localeId: string) {}\n\n  setLocale(locale: PbdsDaterangeLocale) {\n    this.locale = `${locale.language}-${locale.country}`.toLowerCase();\n\n    // set the angular LOCALE_ID dynamically for ng-bootstrap datepicker\n    registerLocaleData(locale.locale, this.locale);\n  }\n\n  getCurrentLocale() {\n    return this.locale;\n  }\n  openPopover(){\n    \n  }\n}\n","import {\n  formatDate,\n  FormatWidth,\n  FormStyle,\n  getLocaleDateFormat,\n  getLocaleDayNames,\n  getLocaleFirstDayOfWeek,\n  getLocaleMonthNames,\n  TranslationWidth\n} from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  forwardRef,\n  Injectable,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { NgbCalendar, NgbDate, NgbDatepickerI18n, NgbDateStruct, NgbPopover } from '@ng-bootstrap/ng-bootstrap';\nimport {\n  PbdsDaterangeChange,\n  PbdsDaterangeFilter,\n  PbdsDaterangeFilterChange,\n  PbdsDaterangePlacement,\n  PbdsDaterangePreset,\n  PbdsDaterangePresetValue\n} from './daterange-popover.interfaces';\nimport { PbdsDaterangeService } from './daterange-popover.service';\n\n// Define custom service providing the months and weekdays translations\n@Injectable()\nexport class CustomDatepickerI18n extends NgbDatepickerI18n {\n  constructor(public daterangeService: PbdsDaterangeService) {\n    super();\n  }\n\n  getWeekdayLabel(weekday: number): string {\n    // for ng-bootstrap, sunday number of 7 converted to 0\n    weekday = weekday === 7 ? 0 : weekday;\n\n    // console.log(\n    //   'weekday: ',\n    //   this.daterangeService.getCurrentLocale(),\n    //   weekday,\n    //   getLocaleDayNames(this.daterangeService.getCurrentLocale(), FormStyle.Standalone, TranslationWidth.Abbreviated)[weekday]\n    // );\n\n    return getLocaleDayNames(\n      this.daterangeService.getCurrentLocale(),\n      FormStyle.Standalone,\n      TranslationWidth.Abbreviated\n    )[weekday];\n  }\n\n  getMonthShortName(month: number): string {\n    return getLocaleMonthNames(this.daterangeService.getCurrentLocale(), FormStyle.Standalone, TranslationWidth.Wide)[\n      month - 1\n    ];\n  }\n\n  getMonthFullName(month: number): string {\n    return getLocaleMonthNames(this.daterangeService.getCurrentLocale(), FormStyle.Standalone, TranslationWidth.Wide)[\n      month - 1\n    ];\n  }\n\n  getDayAriaLabel(date: NgbDateStruct): string {\n    return `${date.day}-${date.month}-${date.year}`;\n  }\n}\n\n@Component({\n  selector: 'pbds-daterange-popover',\n  templateUrl: './daterange-popover.component.html',\n  providers: [\n    { provide: NgbDatepickerI18n, useClass: CustomDatepickerI18n },\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PbdsDaterangePopoverComponent),\n      multi: true\n    }\n  ],\n  styles: [],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PbdsDaterangePopoverComponent implements OnInit, OnChanges, ControlValueAccessor {\n  @ViewChild('datepickerPopup', { static: false }) private datepickerPopup: NgbPopover;\n\n  @Input()\n  presets: Array<PbdsDaterangePreset> = [\n    {\n      label: 'All Dates',\n      value: null\n    },\n    {\n      label: 'Last 7 Days',\n      value: 7\n    },\n    {\n      label: 'Last 30 Days',\n      value: 30\n    },\n    {\n      label: 'Previous Month',\n      value: 'PREVIOUS_MONTH'\n    },\n    {\n      label: 'Year to Date',\n      value: 'YEAR_TO_DATE'\n    }\n  ];\n\n  @Input()\n  presetSelected: PbdsDaterangePresetValue = null;\n\n  @Input()\n  filters: Array<PbdsDaterangeFilter>;\n\n  @Input()\n  filterSelected = 0;\n\n  @Input()\n  showCustomPreset = true;\n\n  @Input()\n  applyText = 'Apply';\n\n  @Input()\n  cancelText = 'Cancel';\n\n  @Input()\n  container: null | 'body' = 'body';\n\n  @Input()\n  customRangeText = 'Custom Range';\n\n  @Input()\n  displayMonths = 2;\n\n  @Input()\n  displayInput = true;\n\n  @Input()\n  minDate: NgbDate = this.calendar.getPrev(this.calendar.getToday(), 'y');\n\n  @Input()\n  maxDate: NgbDate = this.calendar.getToday();\n\n  @Input()\n  placement: PbdsDaterangePlacement = 'bottom-right auto';\n\n  @Input()\n  fromDate: NgbDate | null = null;\n\n  @Input()\n  toDate: NgbDate | null = null;\n\n  @Input()\n  inputFormat = '{fromDate} to {toDate}';\n\n  @Input()\n  ariaLabel = 'Open date picker';\n\n  @Input()\n  ariaLabelSelected = 'Open date picker, selected range is {selectedRange}';\n\n  @Output()\n  dateChange = new EventEmitter<PbdsDaterangeChange>();\n\n  @Output()\n  filterChange = new EventEmitter<PbdsDaterangeFilterChange>();\n\n  @Output()\n  cancel = new EventEmitter<any>();\n\n  firstDayOfWeek = getLocaleFirstDayOfWeek(this.daterangeService.getCurrentLocale());\n\n  hoveredDate: NgbDate;\n\n  dateRange = '';\n  isDatepickerVisible = false;\n  selectedFilter;\n  startDate: NgbDate;\n  formattedDate;\n  emitValue: PbdsDaterangeChange;\n  canEmit: boolean = true;\n  private onTouched: any = () => {};\n  private onChange = (obj: any) => {};\n\n  constructor(private calendar: NgbCalendar, private daterangeService: PbdsDaterangeService) {\n    this.writeValue(this.emitValue);\n  }\n\n  ngOnInit() {\n    // china should start on a Monday, Angular locale returns incorrect 0\n    this.firstDayOfWeek =\n      this.daterangeService.getCurrentLocale() === 'zh-cn' ? this.firstDayOfWeek + 1 : this.firstDayOfWeek;\n\n    if (this.presetSelected === 'CUSTOM') {\n      this.showDatepicker();\n    }\n\n    if (this.presets) {\n      if (!this.filters && this.presetSelected) {\n        this.presetClick(\n          this.presets.find((p, index) => {\n            return p.value === this.presetSelected;\n          })\n        );\n      } else if (this.presetSelected) {\n        this.presetSelect({ value: this.presetSelected });\n\n        this.onApply(false);\n      }\n    }\n    this.onApply(false);\n  }\n  openPbdsDateRangePopup() {\n    this.datepickerPopup.open();\n  }\n\n  // programmatically writing the value\n  writeValue(value: any) {\n    if (value) {\n      // console.log('WRITE VALUE: ', value);\n\n      const filterIndex = this.filters.findIndex((filter) => {\n        return filter.field === value.filter;\n      });\n\n      this.fromDate = value.fromDate;\n      this.toDate = value.toDate;\n      this.formattedDate = value.formattedDate;\n      this.presetSelected = value.value;\n      this.selectedFilter = this.filters[filterIndex];\n      this.isDatepickerVisible = this.presetSelected === 'CUSTOM' ? true : false;\n\n      this.onApply();\n    }\n  }\n\n  // method to be triggered on UI change\n  registerOnChange(onChange: any) {\n    // console.log('ONCHANGE: ', this.emitValue);\n    this.onChange = onChange;\n  }\n\n  // method to be triggered on component touch\n  registerOnTouched(onTouched: () => void) {\n    this.onTouched = onTouched;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // console.log('CHANGES: ', changes);\n\n    if (changes.filters && this.filters) {\n      this.selectedFilter = this.filters[this.filterSelected];\n    }\n\n    if (changes.presets && changes.presets.isFirstChange()) {\n      if (!this.filters && this.presetSelected) {\n        this.presetClick(\n          this.presets.find((p, index) => {\n            return p.value === this.presetSelected;\n          })\n        );\n      } else if (this.presetSelected) {\n        this.presetSelect({ value: this.presetSelected });\n        this.onApply();\n      }\n    }\n\n    // if (changes.toText && changes.toText.firstChange === false) {\n    //   this.setInputLabel();\n    // }\n\n    this.setInputLabel();\n  }\n\n  onApply(shouldEmit = true) {\n    // if only a CUSTOM start date is selected, set the end date to the start date (i.e select a single day)\n    if (!this.toDate) {\n      this.toDate = this.fromDate;\n    }\n\n    this.setInputLabel();\n\n    this.emitValue = {\n      fromDate: this.fromDate,\n      toDate: this.toDate,\n      formattedDate: this.formattedDate,\n      filter: this.filters && this.filters.length > 0 ? this.selectedFilter.field : null,\n      value: this.presetSelected\n    };\n\n    this.startDate = this.fromDate;\n\n    if (shouldEmit) {\n      this.dateChange.emit(this.emitValue);\n\n      this.datepickerPopup?.close();\n\n      this.ariaLabel = this.ariaLabelFormat();\n    }\n\n    setTimeout(() => this.onChange(this.emitValue), 0);\n  }\n\n  onCancel() {\n    this.datepickerPopup.close();\n\n    this.cancel.emit();\n  }\n\n  onDateSelection(date: NgbDate) {\n    if (!this.fromDate && !this.toDate) {\n      this.fromDate = date;\n    } else if (this.fromDate && !this.toDate && date.after(this.fromDate)) {\n      this.toDate = date;\n    } else {\n      this.toDate = null;\n      this.fromDate = date;\n    }\n\n    // this.presetSelected = null;\n  }\n\n  presetSelect = ($event: Partial<PbdsDaterangePreset>) => {\n    if ($event.value === 'CUSTOM') {\n      this.presetSelected = 'CUSTOM';\n      return false;\n    }\n    this.setDateProperties($event.value);\n    this.isDatepickerVisible = false;\n  };\n\n  presetClick(preset: PbdsDaterangePreset) {\n    if (preset) {\n      if (preset.value === 'CUSTOM') {\n        return false;\n      }\n      this.setDateProperties(preset.value);\n      this.isDatepickerVisible = false;\n      this.onApply();\n    }\n  }\n\n  private getFormattedDate(date: NgbDate) {\n    if (date) {\n      const locale = this.daterangeService.getCurrentLocale();\n      const dateFormat = getLocaleDateFormat(locale, FormatWidth.Short);\n      const formattedDate = formatDate(`${date.month}/${date.day}/${date.year}`, dateFormat, locale);\n      return formattedDate;\n    }\n  }\n\n  isHovered = (date: NgbDate) =>\n    this.fromDate && !this.toDate && this.hoveredDate && date.after(this.fromDate) && date.before(this.hoveredDate);\n\n  isInside = (date: NgbDate) => date.after(this.fromDate) && date.before(this.toDate);\n\n  isRange = (date: NgbDate) =>\n    date.equals(this.fromDate) || date.equals(this.toDate) || this.isInside(date) || this.isHovered(date);\n\n  showDatepicker() {\n    this.isDatepickerVisible = true;\n    this.presetSelect({ value: 'CUSTOM' });\n  }\n\n  onFilterChange($event: Event, filter: PbdsDaterangeFilter, index: number) {\n    this.selectedFilter = this.filters[index];\n\n    this.filterChange.emit({\n      event: $event,\n      filter: filter,\n      index: index\n    });\n  }\n\n  setPreset(value: PbdsDaterangePresetValue) {\n    this.presetSelected = value;\n    this.presetSelect({ value: this.presetSelected });\n    this.onApply();\n  }\n\n  setFilter(index: number) {\n    if (this.filters !== undefined) {\n      this.selectedFilter = this.filters[index];\n    }\n  }\n\n  setDateRange(value) {\n    this.fromDate = new NgbDate(value.fromDate.year, value.fromDate.month, value.fromDate.day);\n    this.toDate = new NgbDate(value.toDate.year, value.toDate.month, value.toDate.day);\n    this.isDatepickerVisible = value.value === 'CUSTOM';\n    this.presetSelected = value.value;\n\n    if (this.filters) {\n      this.filterSelected = this.filters.findIndex((f) => f.field === value.filter);\n      this.selectedFilter = this.filters[this.filterSelected];\n    }\n    this.onApply();\n  }\n\n  private setInputLabel() {\n    if (this.presets) {\n      const selected = this.presets.find((p) => p.value === this.presetSelected);\n\n      if (selected) {\n        if (this.fromDate === null || this.toDate === null) {\n          this.dateRange = selected.label;\n        } else if (this.presetSelected === null || (this.presetSelected !== null && this.presetSelected !== 'CUSTOM')) {\n          this.dateRange = selected.label;\n        } else {\n          this.dateRange = this.dateFormat();\n        }\n      } else if (this.presetSelected === 'CUSTOM' && this.fromDate && this.toDate) {\n        this.dateRange = this.dateFormat();\n      }\n\n      if (this.dateRange !== '') {\n        this.formattedDate = this.isDatepickerVisible ? this.dateFormat() : this.dateRange;\n        this.ariaLabel = this.ariaLabelFormat();\n      }\n    }\n  }\n\n  private dateFormat() {\n    return this.inputFormat\n      .replace('{fromDate}', this.getFormattedDate(this.fromDate))\n      .replace('{toDate}', this.getFormattedDate(this.toDate));\n  }\n\n  private ariaLabelFormat() {\n    return this.ariaLabelSelected.replace('{selectedRange}', this.formattedDate);\n  }\n\n  private getDaysInMonth(year: number, month: number) {\n    return new Date(year, month, 0).getDate();\n  }\n\n  private getFromAndToDates(value: PbdsDaterangePresetValue): { from: NgbDateStruct; to: NgbDateStruct } {\n    const now = new Date();\n    const currentYear = now.getFullYear();\n    const currentMonth = now.getMonth();\n    const currentDay = now.getDate();\n    switch (value) {\n      case 'PREVIOUS_MONTH':\n        const year = currentMonth > 0 ? currentYear : currentYear - 1;\n        const month = currentMonth > 0 ? currentMonth : 12;\n        const day = 1;\n        const lastDay = this.getDaysInMonth(year, month);\n        return {\n          from: { year, month, day },\n          to: { year, month, day: lastDay }\n        };\n      case 'YEAR_TO_DATE':\n        return {\n          from: { year: currentYear, month: 1, day: 1 },\n          to: { year: currentYear, month: currentMonth + 1, day: currentDay }\n        };\n      default:\n        return { from: null, to: null };\n    }\n  }\n\n  private setDateProperties(value: PbdsDaterangePresetValue) {\n    if (value === 'PREVIOUS_MONTH' || value === 'YEAR_TO_DATE') {\n      const { from, to } = this.getFromAndToDates(value);\n      this.fromDate = new NgbDate(from.year, from.month, from.day);\n      this.toDate = new NgbDate(to.year, to.month, to.day);\n      this.presetSelected = value;\n      this.startDate = this.fromDate;\n    } else if (typeof value === 'number') {\n      const isFuture = Math.sign(value) === -1 ? true : false;\n\n      if (isFuture) {\n        this.fromDate = this.calendar.getToday();\n        this.toDate = this.calendar.getNext(this.fromDate, 'd', Number(Math.abs(value)));\n        this.presetSelected = value;\n        this.startDate = this.toDate;\n        // console.log('FUTURE: ', this.fromDate, this.toDate, this.presetSelected, this.startDate);\n      } else {\n        this.toDate = this.calendar.getToday();\n        this.fromDate = this.calendar.getPrev(this.toDate, 'd', Number(value));\n        this.presetSelected = value;\n        this.startDate = this.fromDate;\n      }\n    } else {\n      this.fromDate = null;\n      this.toDate = null;\n      this.presetSelected = null;\n      this.startDate = null;\n    }\n  }\n}\n","<div class=\"input-group pbds-daterange-popover\" *ngIf=\"displayInput; else daterangeButton\">\n  <input\n    class=\"form-control\"\n    *ngIf=\"displayInput\"\n    [value]=\"dateRange\"\n    aria-label=\"Date\"\n    aria-readonly=\"true\"\n    readonly=\"readonly\"\n    tabindex=\"-1\"\n  />\n\n  <ng-container *ngTemplateOutlet=\"daterangeButton\"></ng-container>\n</div>\n\n<ng-template #daterangeButton>\n  <button\n    class=\"btn btn-secondary\"\n    id=\"daterange-button\"\n    #datepickerPopup=\"ngbPopover\"\n    [ngbPopover]=\"daterangeContent\"\n    [placement]=\"placement\"\n    [attr.aria-label]=\"ariaLabel\"\n    type=\"button\"\n    popoverClass=\"daterange-popover\"\n    autoClose=\"outside\"\n  >\n    <i class=\"pbi-icon-mini pbi-calendar\" aria-hidden=\"true\"></i>\n  </button>\n</ng-template>\n\n<ng-template #daterangeContent>\n  <div class=\"d-block d-md-flex\" cdkTrapFocus cdkTrapFocusAutoCapture>\n    <div [hidden]=\"!isDatepickerVisible\">\n      <ngb-datepicker\n        #datepicker=\"ngbDatepicker\"\n        [displayMonths]=\"displayMonths\"\n        [minDate]=\"minDate\"\n        [maxDate]=\"maxDate\"\n        [firstDayOfWeek]=\"firstDayOfWeek\"\n        [showWeekdays]=\"true\"\n        [startDate]=\"startDate\"\n        [dayTemplate]=\"t\"\n        (dateSelect)=\"onDateSelection($event)\"\n        navigation=\"select\"\n        outsideDays=\"hidden\"\n      >\n      </ngb-datepicker>\n      <!--  -->\n\n      <ng-template #t let-date let-focused=\"focused\">\n        <span\n          class=\"custom-day\"\n          [class.focused]=\"focused\"\n          [class.range]=\"isRange(date)\"\n          [class.faded]=\"isHovered(date) || isInside(date)\"\n          (mouseenter)=\"hoveredDate = date\"\n          (mouseleave)=\"hoveredDate = null\"\n        >\n          {{ date.day }}\n        </span>\n      </ng-template>\n    </div>\n\n    <div class=\"d-flex flex-column justify-content-lg-between mt-md-0\" [ngClass]=\"{ 'ml-md-4': isDatepickerVisible }\">\n      <!-- filters -->\n      <div class=\"mb-3\" *ngIf=\"filters && filters.length > 0\" ngbDropdown>\n        <button class=\"btn btn-sm btn-secondary btn-block\" id=\"dateFilter\" ngbDropdownToggle>\n          {{ selectedFilter.label }}\n        </button>\n        <div ngbDropdownMenu aria-labelledby=\"dateFilter\">\n          <button\n            class=\"dropdown-item\"\n            *ngFor=\"let filter of filters; let index = index\"\n            (click)=\"onFilterChange($event, filter, index)\"\n            type=\"button\"\n          >\n            {{ filter.label }}\n          </button>\n        </div>\n      </div>\n\n      <!-- presets radio buttons-->\n      <div class=\"flex-grow-1\" *ngIf=\"presets && filters\">\n        <mat-radio-group\n          class=\"stacked-radio-group\"\n          [(ngModel)]=\"presetSelected\"\n          (change)=\"presetSelect($event)\"\n          aria-label=\"Select an option\"\n          style=\"gap: 4px\"\n          name=\"presets\"\n        >\n          <mat-radio-button *ngFor=\"let preset of presets\" [value]=\"preset.value\">{{ preset.label }}</mat-radio-button>\n\n          <mat-radio-button *ngIf=\"showCustomPreset\" [value]=\"'CUSTOM'\" (change)=\"showDatepicker()\">{{\n            customRangeText\n          }}</mat-radio-button>\n        </mat-radio-group>\n      </div>\n\n      <!-- presets buttons-->\n      <div class=\"d-flex flex-column\" *ngIf=\"presets && !filters\" style=\"gap: 4px\">\n        <button\n          class=\"btn btn-secondary btn-block btn-sm text-nowrap\"\n          *ngFor=\"let preset of presets\"\n          (click)=\"presetClick(preset)\"\n          type=\"button\"\n        >\n          {{ preset.label }}\n        </button>\n\n        <button\n          class=\"btn btn-secondary btn-block btn-sm text-nowrap\"\n          *ngIf=\"showCustomPreset\"\n          (click)=\"showDatepicker()\"\n          type=\"button\"\n        >\n          {{ customRangeText }}\n        </button>\n      </div>\n\n      <!-- buttons -->\n      <div class=\"d-flex justify-content-between mt-3\" *ngIf=\"filters || isDatepickerVisible\">\n        <button class=\"btn btn-primary btn-sm mr-1\" (click)=\"onApply()\" type=\"button\">\n          {{ applyText }}\n        </button>\n        <button class=\"btn btn-secondary btn-sm ml-1\" (click)=\"onCancel()\" type=\"button\">\n          {{ cancelText }}\n        </button>\n      </div>\n    </div>\n  </div>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { NgbDatepickerModule, NgbPopoverModule, NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { MatRadioModule } from '@angular/material/radio';\nimport { A11yModule } from '@angular/cdk/a11y';\n\nimport { PbdsDaterangePopoverComponent } from './daterange-popover.component';\n\n@NgModule({\n  declarations: [PbdsDaterangePopoverComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    A11yModule,\n    MatRadioModule,\n    NgbDatepickerModule,\n    NgbPopoverModule,\n    NgbDropdownModule\n  ],\n  exports: [PbdsDaterangePopoverComponent]\n})\nexport class PbdsDaterangePopoverModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i1.PbdsDaterangeService"],"mappings":"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"}