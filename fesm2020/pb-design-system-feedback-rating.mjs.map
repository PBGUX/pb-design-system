{"version":3,"file":"pb-design-system-feedback-rating.mjs","sources":["../../../projects/pb-design-system/feedback-rating/feedback-rating.component.ts","../../../projects/pb-design-system/feedback-rating/feedback-rating.component.html","../../../projects/pb-design-system/feedback-rating/feedback-rating.module.ts","../../../projects/pb-design-system/feedback-rating/pb-design-system-feedback-rating.ts"],"sourcesContent":["import { Attribute, Component, Input, OnInit } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nlet COUNT = 0;\n\n@Component({\n  selector: 'pbds-feedback-rating',\n  templateUrl: './feedback-rating.component.html',\n  styleUrls: ['./feedback-rating.component.css'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: PbdsFeedbackRatingComponent\n    }\n  ]\n})\nexport class PbdsFeedbackRatingComponent implements OnInit, ControlValueAccessor {\n  @Input() ariaLabels = ['Strongly disagree', 'Disagree', 'Neutral', 'Agree', 'Strongly agree'];\n\n  @Input() color = false;\n\n  onChange = (value) => {};\n\n  onTouched = () => {};\n\n  touched = false;\n\n  value: any;\n\n  disabled = false;\n\n  public count: number;\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.count = COUNT++;\n  }\n\n  writeValue(value: number) {\n    this.value = value;\n  }\n\n  registerOnChange(onChange: any) {\n    this.onChange = onChange;\n  }\n\n  registerOnTouched(onTouched: any) {\n    this.onTouched = onTouched;\n  }\n\n  setDisabledState(disabled: boolean) {\n    this.disabled = disabled;\n  }\n\n  onNewText($event) {\n    this.onChange($event.target.value);\n\n    if (!this.touched) {\n      this.onTouched();\n      this.touched = true;\n    }\n  }\n}\n","<div class=\"smiley-ratings\">\n  <div\n    class=\"smileys\"\n    [ngClass]=\"color ? 'smileys-color' : 'smileys-mono'\"\n    role=\"group\"\n    aria-labelledby=\"smileyRatingLabel\"\n  >\n    <input\n      id=\"strongly-disagree-{{ count }}\"\n      (change)=\"onNewText($event)\"\n      name=\"feedback-{{ count }}\"\n      type=\"radio\"\n      value=\"strongly-disagree\"\n    />\n    <label class=\"smiley smiley1\" for=\"strongly-disagree-{{ count }}\">\n      <svg width=\"50\" height=\"50\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <circle class=\"smiley-circle\" cx=\"25\" cy=\"25\" r=\"22\" />\n        <path\n          d=\"M16.667 21.93a1.754 1.754 0 1 0 0-3.509 1.754 1.754 0 0 0 0 3.509ZM32.456 21.93a1.754 1.754 0 1 0 0-3.509 1.754 1.754 0 0 0 0 3.509Z\"\n          fill=\"#595959\"\n          stroke=\"#595959\"\n          stroke-width=\"2\"\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n        />\n        <path\n          d=\"M32.635 35.508c-1.62-3.141-4.613-5.077-7.854-5.077-3.241 0-6.235 1.936-7.854 5.077M14.735 11.05l3.863 4.318M33.825 11.05l-3.181 4.546\"\n          stroke=\"#595959\"\n          stroke-width=\"2\"\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n        />\n      </svg>\n      <span class=\"sr-only\">{{ ariaLabels[0] }}</span>\n    </label>\n\n    <input\n      id=\"disagree-{{ count }}\"\n      (change)=\"onNewText($event)\"\n      name=\"feedback-{{ count }}\"\n      type=\"radio\"\n      value=\"disagree\"\n    />\n    <label class=\"smiley smiley2\" for=\"disagree-{{ count }}\">\n      <svg width=\"50\" height=\"50\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <circle class=\"smiley-circle\" cx=\"25\" cy=\"25\" r=\"22\" />\n        <path\n          d=\"M14.286 21.428a2.04 2.04 0 1 0 0-4.081 2.04 2.04 0 0 0 0 4.081ZM34.91 21.428a2.04 2.04 0 1 0 0-4.081 2.04 2.04 0 0 0 0 4.081Z\"\n          fill=\"#595959\"\n          stroke=\"#595959\"\n          stroke-width=\"2\"\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n        />\n        <path\n          d=\"M34.09 36.364c-1.873-1.818-5.34-2.938-9.09-2.938-3.751 0-7.217 1.12-9.091 2.938\"\n          stroke=\"#595959\"\n          stroke-width=\"2\"\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n        />\n      </svg>\n      <span class=\"sr-only\">{{ ariaLabels[1] }}</span>\n    </label>\n\n    <input\n      id=\"neutral-{{ count }}\"\n      (change)=\"onNewText($event)\"\n      name=\"feedback-{{ count }}\"\n      type=\"radio\"\n      value=\"neutral\"\n    />\n    <label class=\"smiley smiley3\" for=\"neutral-{{ count }}\">\n      <svg width=\"50\" height=\"50\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <circle class=\"smiley-circle\" cx=\"25\" cy=\"25\" r=\"22\" />\n        <path\n          d=\"M15 21a2 2 0 1 0 0-4 2 2 0 0 0 0 4ZM35.21 21a2 2 0 1 0 .001-4 2 2 0 0 0 0 4Z\"\n          fill=\"#595959\"\n          stroke=\"#595959\"\n          stroke-width=\"2\"\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n        />\n        <path d=\"M14.69 35.2h20.565\" stroke=\"#595959\" stroke-width=\"2\" stroke-linecap=\"round\" />\n      </svg>\n      <span class=\"sr-only\">{{ ariaLabels[2] }}</span>\n    </label>\n\n    <input id=\"agree-{{ count }}\" (change)=\"onNewText($event)\" name=\"feedback-{{ count }}\" type=\"radio\" value=\"agree\" />\n    <label class=\"smiley smiley4\" for=\"agree-{{ count }}\">\n      <svg width=\"50\" height=\"50\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <circle class=\"smiley-circle\" cx=\"25\" cy=\"25\" r=\"22\" />\n        <path\n          d=\"M15 21a2 2 0 1 0 0-4 2 2 0 0 0 0 4ZM35.21 21a2 2 0 1 0 0-4 2 2 0 0 0 0 4Z\"\n          fill=\"#595959\"\n          stroke=\"#595959\"\n          stroke-width=\"2\"\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n        />\n        <path\n          d=\"M34.09 34.316c-1.873 1.818-5.34 2.938-9.09 2.938-3.751 0-7.217-1.12-9.091-2.938\"\n          stroke=\"#595959\"\n          stroke-width=\"2\"\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n        />\n      </svg>\n      <span class=\"sr-only\">{{ ariaLabels[3] }}</span>\n    </label>\n\n    <input\n      id=\"strongly-agree-{{ count }}\"\n      (change)=\"onNewText($event)\"\n      name=\"feedback-{{ count }}\"\n      type=\"radio\"\n      value=\"strongly-agree\"\n    />\n    <label class=\"smiley smiley5\" for=\"strongly-agree-{{ count }}\">\n      <svg width=\"50\" height=\"50\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <circle class=\"smiley-circle\" cx=\"25\" cy=\"25\" r=\"22\" />\n        <path\n          d=\"M35.302 32.782c-2.114 4.884-6.026 7.892-10.259 7.892-4.233 0-8.144-3.008-10.26-7.892M17.94 20.682c-.705-1.628-2.008-2.63-3.42-2.63-1.41 0-2.714 1.002-3.42 2.63M37.407 20.682c-.705-1.628-2.009-2.63-3.42-2.63s-2.715 1.002-3.42 2.63\"\n          stroke=\"#595959\"\n          stroke-width=\"2\"\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n        />\n      </svg>\n      <span class=\"sr-only\">{{ ariaLabels[4] }}</span>\n    </label>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PbdsFeedbackRatingComponent } from './feedback-rating.component';\n\n@NgModule({\n  declarations: [PbdsFeedbackRatingComponent],\n  imports: [CommonModule],\n  exports: [PbdsFeedbackRatingComponent]\n})\nexport class PbdsFeedbackRatingModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":";;;;;;AAGA,IAAI,KAAK,GAAG,CAAC,CAAC;MAcD,2BAA2B,CAAA;AAiBtC,IAAA,WAAA,GAAA;AAhBS,QAAA,IAAA,CAAA,UAAU,GAAG,CAAC,mBAAmB,EAAE,UAAU,EAAE,SAAS,EAAE,OAAO,EAAE,gBAAgB,CAAC,CAAC;QAErF,IAAK,CAAA,KAAA,GAAG,KAAK,CAAC;AAEvB,QAAA,IAAA,CAAA,QAAQ,GAAG,CAAC,KAAK,KAAI,GAAG,CAAC;AAEzB,QAAA,IAAA,CAAA,SAAS,GAAG,MAAK,GAAG,CAAC;QAErB,IAAO,CAAA,OAAA,GAAG,KAAK,CAAC;QAIhB,IAAQ,CAAA,QAAA,GAAG,KAAK,CAAC;KAID;IAEhB,QAAQ,GAAA;AACN,QAAA,IAAI,CAAC,KAAK,GAAG,KAAK,EAAE,CAAC;KACtB;AAED,IAAA,UAAU,CAAC,KAAa,EAAA;AACtB,QAAA,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;AAED,IAAA,gBAAgB,CAAC,QAAa,EAAA;AAC5B,QAAA,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC1B;AAED,IAAA,iBAAiB,CAAC,SAAc,EAAA;AAC9B,QAAA,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;KAC5B;AAED,IAAA,gBAAgB,CAAC,QAAiB,EAAA;AAChC,QAAA,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC1B;AAED,IAAA,SAAS,CAAC,MAAM,EAAA;QACd,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAEnC,QAAA,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,IAAI,CAAC,SAAS,EAAE,CAAC;AACjB,YAAA,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;AACrB,SAAA;KACF;;wHA9CU,2BAA2B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA3B,2BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,2BAA2B,EAR3B,QAAA,EAAA,sBAAA,EAAA,MAAA,EAAA,EAAA,UAAA,EAAA,YAAA,EAAA,KAAA,EAAA,OAAA,EAAA,EAAA,SAAA,EAAA;AACT,QAAA;AACE,YAAA,OAAO,EAAE,iBAAiB;AAC1B,YAAA,KAAK,EAAE,IAAI;AACX,YAAA,WAAW,EAAE,2BAA2B;AACzC,SAAA;AACF,KAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,ECfH,uoKAqIA,EAAA,MAAA,EAAA,CAAA,EAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FDpHa,2BAA2B,EAAA,UAAA,EAAA,CAAA;kBAZvC,SAAS;AACE,YAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,sBAAsB,EAGrB,SAAA,EAAA;AACT,wBAAA;AACE,4BAAA,OAAO,EAAE,iBAAiB;AAC1B,4BAAA,KAAK,EAAE,IAAI;AACX,4BAAA,WAAW,EAA6B,2BAAA;AACzC,yBAAA;AACF,qBAAA,EAAA,QAAA,EAAA,uoKAAA,EAAA,CAAA;0EAGQ,UAAU,EAAA,CAAA;sBAAlB,KAAK;gBAEG,KAAK,EAAA,CAAA;sBAAb,KAAK;;;MEXK,wBAAwB,CAAA;;qHAAxB,wBAAwB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAxB,wBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,wBAAwB,EAJpB,YAAA,EAAA,CAAA,2BAA2B,CAChC,EAAA,OAAA,EAAA,CAAA,YAAY,aACZ,2BAA2B,CAAA,EAAA,CAAA,CAAA;AAE1B,wBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,wBAAwB,YAHzB,YAAY,CAAA,EAAA,CAAA,CAAA;2FAGX,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBALpC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,YAAY,EAAE,CAAC,2BAA2B,CAAC;oBAC3C,OAAO,EAAE,CAAC,YAAY,CAAC;oBACvB,OAAO,EAAE,CAAC,2BAA2B,CAAC;AACvC,iBAAA,CAAA;;;ACRD;;AAEG;;;;"}