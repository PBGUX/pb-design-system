{"version":3,"file":"pb-design-system-multiple-values.mjs","sources":["../../../projects/pb-design-system/multiple-values/multiple-values.directive.ts","../../../projects/pb-design-system/multiple-values/multiple-values.module.ts","../../../projects/pb-design-system/multiple-values/multiple-values-validators.ts","../../../projects/pb-design-system/multiple-values/pb-design-system-multiple-values.ts"],"sourcesContent":["import { DOCUMENT } from '@angular/common';\nimport {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  HostBinding,\n  HostListener,\n  Inject,\n  Input,\n  OnInit,\n  Output\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nexport interface PbdsMultipleValuesSubmit {\n  event: Event;\n  value: string[];\n}\n@Directive({\n  selector: '[pbdsMultipleValues]',\n  exportAs: 'PbdsMultipleValues',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PbdsMultipleValuesDirective),\n      multi: true\n    },\n    { provide: Window, useValue: window }\n  ]\n})\nexport class PbdsMultipleValuesDirective implements ControlValueAccessor, OnInit {\n  @HostBinding('class.pbds-multiple-values') private multipleValuesClass = true;\n\n  @HostBinding('class.placeholder') private isPlaceholder = true;\n\n  @HostBinding('attr.contenteditable') private contentEditable = true;\n\n  @HostBinding('attr.role') private role = 'textbox';\n\n  @Input()\n  public readonly delimiters = [' ', ',', '\\r'];\n\n  @Input()\n  public readonly delimetersSwitches = 'gm';\n\n  @Input()\n  public readonly replacements = [\n    '(<div><br></div>)',\n    '(<div>)',\n    '(</div>)',\n    '\\t',\n    '&nbsp;',\n    '<br>|<br/>',\n    '^ +',\n    '^\\n' // newline should be last\n  ];\n\n  @Input()\n  public readonly replacementsSwtiches = 'gm';\n\n  @Input()\n  public readonly placeholder: string | null = null;\n\n  @Input()\n  public readonly submitOnEnter = false;\n\n  @Input()\n  public readonly maximumHeight = 150;\n\n  @Output()\n  public readonly submit: EventEmitter<PbdsMultipleValuesSubmit> = new EventEmitter();\n\n  private value: string;\n  private document: Document;\n  private window: Window;\n  private isFirefox = false;\n\n  private onTouched = () => {};\n  private onChange: (value: string[]) => void = () => {};\n\n  constructor(@Inject(DOCUMENT) document: any, @Inject(Window) window: Window, private el: ElementRef<HTMLDivElement>) {\n    // fix for using document in a publishable library see https://stackoverflow.com/questions/65222602/how-to-export-angular-10-guard-using-document-for-public-api\n    this.document = <Document>document;\n    this.window = <Window>window;\n\n    // check if browser is firefox\n    const agent = this.window.navigator.userAgent.toLowerCase();\n    this.isFirefox = agent.indexOf('firefox') > -1;\n\n    // handle ngModel and FormCntrolName\n    this.writeValue(this.value);\n  }\n\n  ngOnInit() {\n    // handle event only placeholder (i.e. no ngModel or FormControlName)\n    if (this.value === undefined) {\n      this.setPlaceholder();\n    }\n\n    this.el.nativeElement.style.setProperty('--pbds-multiple-values-max-height', `${+this.maximumHeight}px`);\n  }\n\n  @HostListener('input') private onInput() {\n    return false;\n  }\n\n  @HostListener('focus') private onFocus() {\n    const selection = this.document.getSelection();\n    const range = this.document.createRange();\n\n    range.selectNodeContents(this.el.nativeElement);\n    selection.removeAllRanges();\n    selection.addRange(range);\n\n    if (this.value === this.placeholder) {\n      this.value = '';\n      this.el.nativeElement.innerHTML = '';\n      this.isPlaceholder = false;\n      return;\n    }\n\n    return false;\n  }\n\n  @HostListener('blur') private onBlur() {\n    this.onTouched();\n\n    const value = this.clean(this.el.nativeElement.innerHTML);\n\n    this.value = value;\n    this.el.nativeElement.innerHTML = value;\n\n    const values = this.toValueArray(value);\n    this.onChange(values);\n\n    this.setPlaceholder();\n\n    return false;\n  }\n\n  @HostListener('keydown', ['$event']) private onKeydown($event: KeyboardEvent) {\n    if (this.submitOnEnter && ($event.key === 'Enter' || $event.code === 'Enter') && !$event.shiftKey) {\n      return false;\n    }\n  }\n\n  @HostListener('keyup', ['$event']) private onKeyup($event: KeyboardEvent) {\n    const value = this.clean(this.el.nativeElement.innerHTML);\n    const values = this.toValueArray(value);\n\n    this.onChange(values);\n\n    if (this.submitOnEnter) {\n      if (($event.key === 'Enter' || $event.code === 'Enter') && !$event.shiftKey) {\n        this.value = value;\n        this.el.nativeElement.innerHTML = value;\n\n        this.submit.emit({\n          event: $event,\n          value: values\n        });\n      }\n\n      return false;\n    }\n  }\n\n  @HostListener('paste', ['$event']) private onPaste($event) {\n    let paste = $event.clipboardData.getData('text/plain');\n    paste = this.clean(paste);\n\n    const selection = this.document.defaultView.getSelection();\n\n    if (!selection.rangeCount) {\n      return;\n    }\n\n    this.value = paste; // do not set this.el.nativeElement.innerHTML here, will break\n\n    selection.deleteFromDocument();\n    selection.getRangeAt(0).insertNode(this.document.createTextNode(paste));\n    selection.collapseToEnd();\n\n    const pasteArr = this.toValueArray(paste);\n\n    this.onChange(pasteArr);\n\n    this.isPlaceholder = false;\n\n    return false;\n  }\n\n  // programmatically writing the value\n  writeValue(value: any) {\n    if (value) {\n      this.value = value.join('\\n');\n    }\n\n    this.setPlaceholder();\n  }\n\n  // method to be triggered on UI change\n  registerOnChange(onChange: (value: string[]) => void) {\n    this.onChange = onChange;\n  }\n\n  // method to be triggered on component touch\n  registerOnTouched(onTouched: () => void) {\n    this.onTouched = onTouched;\n  }\n\n  setDisabledState(disabled: boolean) {\n    this.contentEditable = disabled;\n  }\n\n  /**\n   * Get values\n   *\n   * @returns {string[]} Array of strings\n   */\n  getValues(): string[] {\n    const value = this.clean(this.el.nativeElement.innerHTML);\n    const values = this.toValueArray(value);\n\n    return values;\n  }\n\n  /**\n   * Reset the value to an empty string\n   *\n   * @returns void\n   */\n  reset(): void {\n    this.value = '';\n  }\n\n  /**\n   * Check if `value` is  an empty string, `<br>` or equal to the placeholder text. If not, then set the value to the placeholder and apply the placeholder class.\n   *\n   * @returns void\n   */\n  private setPlaceholder(): void {\n    if (this.placeholder) {\n      if (!this.value || this.value === '' || this.value === '<br>' || this.value === this.placeholder) {\n        this.value = this.placeholder;\n        this.el.nativeElement.innerHTML = this.placeholder;\n        this.isPlaceholder = true;\n\n        return;\n      }\n    }\n\n    this.isPlaceholder = false;\n  }\n\n  /**\n   * Convert innerHTML string to an array of strings\n   *\n   * @param {string} value - innerHTML of the content editable div\n   *\n   * @returns {string[]} Array of strings\n   */\n  private toValueArray(value: string): string[] {\n    const values = value.split(/\\n|\\r/).filter((v) => v !== '');\n    return values;\n  }\n\n  /**\n   * Clean characters from the innerHTML\n   *\n   * @param {string} value  - innerHTML of the content editable div\n   *\n   * @returns {string} String with the following removed: divs, commas, spaces, tabs, empty lines, non-breaking spaces\n   */\n  private clean(value: string): string {\n    // console.log('INITIAL VALUE: ', value);\n\n    // delimeters\n    for (let index = 0; index < this.delimiters.length; index++) {\n      const regex = new RegExp(this.delimiters[index], this.delimetersSwitches);\n      value = value.replace(regex, '\\n');\n    }\n\n    // replace opening divs with divider before replacements\n    value = value.replace(/(<div>)/gm, '\\n');\n\n    // replacements\n    for (let index = 0; index < this.replacements.length; index++) {\n      const regex = new RegExp(this.replacements[index], this.replacementsSwtiches);\n\n      if (this.isFirefox) {\n        value = value.replace(regex, '\\n');\n      } else {\n        value = value.replace(regex, '');\n      }\n    }\n\n    // replace empty newlines\n    if (this.isFirefox) {\n      value = value.replace(/^\\n/gm, '');\n    }\n\n    // console.log('CLEANED VALUE: ', value);\n    return value;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PbdsMultipleValuesDirective } from './multiple-values.directive';\n\n@NgModule({\n  declarations: [PbdsMultipleValuesDirective],\n  imports: [CommonModule],\n  exports: [PbdsMultipleValuesDirective]\n})\nexport class PbdsMultipleValuesModule {}\n","import { AbstractControl, ValidatorFn } from '@angular/forms';\n\nexport class PbdsMultipleValuesValidators {\n  static maxArrayLength(maxLength: number): ValidatorFn {\n    // use a varible to prevent compiler lambda error, see https://github.com/ng-packagr/ng-packagr/issues/696#issuecomment-387114613\n    const result = (c: AbstractControl): { [key: string]: boolean } | null => {\n      if (c.value?.length > maxLength) {\n        return { pbdsMultipleValuesMaxLength: true };\n      }\n\n      return null;\n    };\n\n    return result;\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}