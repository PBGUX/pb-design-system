{"version":3,"file":"pb-design-system-multiple-values.mjs","sources":["../../../projects/pb-design-system/multiple-values/multiple-values.directive.ts","../../../projects/pb-design-system/multiple-values/multiple-values.module.ts","../../../projects/pb-design-system/multiple-values/multiple-values-validators.ts","../../../projects/pb-design-system/multiple-values/pb-design-system-multiple-values.ts"],"sourcesContent":["import { DOCUMENT } from '@angular/common';\nimport {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  HostBinding,\n  HostListener,\n  Inject,\n  Input,\n  OnInit,\n  Output\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nexport interface PbdsMultipleValuesSubmit {\n  event: Event;\n  value: string[];\n}\n@Directive({\n  selector: '[pbdsMultipleValues]',\n  exportAs: 'PbdsMultipleValues',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PbdsMultipleValuesDirective),\n      multi: true\n    }\n  ]\n})\nexport class PbdsMultipleValuesDirective implements ControlValueAccessor, OnInit {\n  @HostBinding('class.pbds-multiple-values') private multipleValuesClass = true;\n\n  @HostBinding('class.placeholder') private isPlaceholder = true;\n\n  @HostBinding('attr.contenteditable') private contentEditable = true;\n\n  @HostBinding('attr.role') private role = 'textbox';\n\n  @Input()\n  public readonly delimiters = [' ', ',', '\\r'];\n\n  @Input()\n  public readonly delimetersSwitches = 'gm';\n\n  @Input()\n  public readonly replacements = [\n    '(<div><br></div>)',\n    '(<div>)',\n    '(</div>)',\n    '\\t',\n    '&nbsp;',\n    '<br>|<br/>',\n    '^ +',\n    '^\\n' // newline should be last\n  ];\n\n  @Input()\n  public readonly replacementsSwtiches = 'gm';\n\n  @Input()\n  public readonly placeholder: string | null = null;\n\n  @Input()\n  public readonly submitOnEnter = false;\n\n  @Input()\n  public readonly maximumHeight = 150;\n\n  @Output()\n  public readonly submit: EventEmitter<PbdsMultipleValuesSubmit> = new EventEmitter();\n\n  private value: string;\n  private document: Document;\n\n  private onTouched = () => {};\n  private onChange: (value: string[]) => void = () => {};\n\n  constructor(@Inject(DOCUMENT) document: any, private el: ElementRef<HTMLDivElement>) {\n    // fix for using document in a publishable library see https://stackoverflow.com/questions/65222602/how-to-export-angular-10-guard-using-document-for-public-api\n    this.document = <Document>document;\n\n    // handle ngModel and FormCntrolName\n    this.writeValue(this.value);\n  }\n\n  ngOnInit() {\n    // handle event only placeholder (i.e. no ngModel or FormControlName)\n    if (this.value === undefined) {\n      this.setPlaceholder();\n    }\n\n    this.el.nativeElement.style.setProperty('--pbds-multiple-values-max-height', `${+this.maximumHeight}px`);\n  }\n\n  @HostListener('input') private onInput() {\n    return false;\n  }\n\n  @HostListener('focus') private onFocus() {\n    const selection = this.document.getSelection();\n    const range = this.document.createRange();\n\n    range.selectNodeContents(this.el.nativeElement);\n    selection.removeAllRanges();\n    selection.addRange(range);\n\n    if (this.value === this.placeholder) {\n      this.value = '';\n      this.el.nativeElement.innerHTML = '';\n      this.isPlaceholder = false;\n      return;\n    }\n\n    return false;\n  }\n\n  @HostListener('blur') private onBlur() {\n    this.onTouched();\n\n    const value = this.clean(this.el.nativeElement.innerHTML);\n\n    this.value = value;\n    this.el.nativeElement.innerHTML = value;\n\n    const values = this.toValueArray(value);\n    this.onChange(values);\n\n    this.setPlaceholder();\n\n    return false;\n  }\n\n  @HostListener('keydown', ['$event']) private onKeydown($event: KeyboardEvent) {\n    if (this.submitOnEnter && ($event.key === 'Enter' || $event.code === 'Enter') && !$event.shiftKey) {\n      return false;\n    }\n  }\n\n  @HostListener('keyup', ['$event']) private onKeyup($event: KeyboardEvent) {\n    const value = this.clean(this.el.nativeElement.innerHTML);\n    const values = this.toValueArray(value);\n\n    this.onChange(values);\n\n    if (this.submitOnEnter) {\n      if (($event.key === 'Enter' || $event.code === 'Enter') && !$event.shiftKey) {\n        this.value = value;\n        this.el.nativeElement.innerHTML = value;\n\n        this.submit.emit({\n          event: $event,\n          value: values\n        });\n      }\n\n      return false;\n    }\n  }\n\n  @HostListener('paste', ['$event']) private onPaste($event) {\n    let paste = $event.clipboardData.getData('text/plain');\n    paste = this.clean(paste);\n\n    const selection = this.document.defaultView.getSelection();\n\n    if (!selection.rangeCount) {\n      return;\n    }\n\n    this.value = paste; // do not set this.el.nativeElement.innerHTML here, will break\n\n    selection.deleteFromDocument();\n    selection.getRangeAt(0).insertNode(this.document.createTextNode(paste));\n    selection.collapseToEnd();\n\n    const pasteArr = this.toValueArray(paste);\n\n    this.onChange(pasteArr);\n\n    this.isPlaceholder = false;\n\n    return false;\n  }\n\n  // programmatically writing the value\n  writeValue(value: any) {\n    if (value) {\n      this.value = value.join('\\n');\n    }\n\n    this.setPlaceholder();\n  }\n\n  // method to be triggered on UI change\n  registerOnChange(onChange: (value: string[]) => void) {\n    this.onChange = onChange;\n  }\n\n  // method to be triggered on component touch\n  registerOnTouched(onTouched: () => void) {\n    this.onTouched = onTouched;\n  }\n\n  setDisabledState(disabled: boolean) {\n    this.contentEditable = disabled;\n  }\n\n  /**\n   * Get values\n   *\n   * @returns {string[]} Array of strings\n   */\n  getValues(): string[] {\n    const value = this.clean(this.el.nativeElement.innerHTML);\n    const values = this.toValueArray(value);\n\n    return values;\n  }\n\n  /**\n   * Reset the value to an empty string\n   *\n   * @returns void\n   */\n  reset(): void {\n    this.value = '';\n  }\n\n  /**\n   * Check if `value` is  an empty string, `<br>` or equal to the placeholder text. If not, then set the value to the placeholder and apply the placeholder class.\n   *\n   * @returns void\n   */\n  private setPlaceholder(): void {\n    if (this.placeholder) {\n      if (!this.value || this.value === '' || this.value === '<br>' || this.value === this.placeholder) {\n        this.value = this.placeholder;\n        this.el.nativeElement.innerHTML = this.placeholder;\n        this.isPlaceholder = true;\n\n        return;\n      }\n    }\n\n    this.isPlaceholder = false;\n  }\n\n  /**\n   * Convert innerHTML string to an array of strings\n   *\n   * @param {string} value - innerHTML of the content editable div\n   *\n   * @returns {string[]} Array of strings\n   */\n  private toValueArray(value: string): string[] {\n    const values = value.split(/\\n|\\r/).filter((v) => v !== '');\n    return values;\n  }\n\n  /**\n   * Clean characters from the innerHTML\n   *\n   * @param {string} value  - innerHTML of the content editable div\n   *\n   * @returns {string} String with the following removed: divs, commas, spaces, tabs, empty lines, non-breaking spaces\n   */\n  private clean(value: string): string {\n    console.log('INITIAL VALUE: ', value);\n\n    // delimeters\n    for (let index = 0; index < this.delimiters.length; index++) {\n      const regex = new RegExp(this.delimiters[index], this.delimetersSwitches);\n      value = value.replace(regex, '\\n');\n    }\n\n    // replace opening divs with divider before replacements\n    value = value.replace(/(<div>)/gm, '\\n');\n\n    // replacements\n    for (let index = 0; index < this.replacements.length; index++) {\n      const regex = new RegExp(this.replacements[index], this.replacementsSwtiches);\n      value = value.replace(regex, '');\n    }\n\n    console.log('CLEANED VALUE: ', value);\n    return value;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PbdsMultipleValuesDirective } from './multiple-values.directive';\n\n@NgModule({\n  declarations: [PbdsMultipleValuesDirective],\n  imports: [CommonModule],\n  exports: [PbdsMultipleValuesDirective]\n})\nexport class PbdsMultipleValuesModule {}\n","import { AbstractControl, ValidatorFn } from '@angular/forms';\n\nexport class PbdsMultipleValuesValidators {\n  static maxArrayLength(maxLength: number): ValidatorFn {\n    // use a varible to prevent compiler lambda error, see https://github.com/ng-packagr/ng-packagr/issues/696#issuecomment-387114613\n    const result = (c: AbstractControl): { [key: string]: boolean } | null => {\n      if (c.value?.length > maxLength) {\n        return { pbdsMultipleValuesMaxLength: true };\n      }\n\n      return null;\n    };\n\n    return result;\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}